<?php

namespace Fatturaopen\E2e;

use Facebook\WebDriver\WebDriverBy;
use Iubar\Tests\Web_TestCase;

/**
 * Test of www.fatturaopen.it
 *
 * @author Daniele
 * @global env BROWSER
 * @global env SELENIUM_SERVER
 * @global env SELENIUM_PATH
 * @global env SCREENSHOTS_PATH
 * @global env APP_HOST
 */
class FatturaopenTest extends Web_TestCase {

    const EXAMPLE_FATTURA_URL = '/php/Iubar/Application/Xml/1.1/examples/IT01234567890_11001.xml';

    // Page titles
    const TITLE_SITE = "FatturaOpen.it";
    const VISUALIZZAZIONE_TITLE = 'Fattura';
        
    private static $max_errors_on_console = 4; // FIXME: perchè con CHROME ci sono errori che variano casualmente ?

    /**
     * SiteHome and AppHome test
     */
    public function testSiteHome() {
        self::$climate->lightGreen('Inizio testSiteHome()');
        $wd = $this->getWd();        
        $wd->get($this->getSiteHome() . '/'); // Navigate to SITE_HOME
        $this->check_webpage($this->getSiteHome() . '/', self::TITLE_SITE);
        self::$climate->lightGreen('Fine testSiteHome()');
    }

    /**
     * Try to import an invoice in ROUTE_STRUMENTI_IMPORTAZIONE
     */
    public function testImportazioneFattura() {
        
        if (self::$browser != self::MARIONETTE && self::$browser != self::SAFARI) { // FIXME: la soluzione seguente è incompatibile con MARIONETTE e SAFARI
            self::$climate->lightGreen('Inizio testImportazioneFattura()');
            
            $wd = $this->getWd();
            $wd->get($this->getSiteHome() . '/');
        
            // Wait for 'Visualizza fattura' drop box
            $import_box_path = '/html/body/div[4]/div[2]/div/div[2]/div[1]';
            $drop_area = $wd->findElement(WebDriverBy::xpath($import_box_path));            
            $this->assertNotNull($drop_area);
        
            // Check right page
            $this->check_webpage($this->getSiteHome() . '/', self::TITLE_SITE);            
            if (self::$browser != self::MARIONETTE) { // NOTE: can't read the console with MARIONETTE: https://github.com/mozilla/geckodriver/issues/144
                self::$climate->white("Calling clearBrowserConsole()...");
                $this->clearBrowserConsole(); // clean the browser console log
            }
            
            // Get file to upload
            $content_url = $this->getSiteHome() . self::EXAMPLE_FATTURA_URL;
            $data = file_get_contents($content_url);
            if (!is_string($data)) {
                $this->fail("Can't read the invoice: " . $content_url);
            }
            $tmp_file = $this->getTmpDir() . DIRECTORY_SEPARATOR . 'esempio_fattura.xml';
            file_put_contents($tmp_file, $data);            
            self::checkFile($tmp_file);           
            self::$files_to_del[] = $tmp_file;
                                                                                              
            // Execute the js script to upload the invoice
            self::$climate->white("Calling dragFileToUpload()...");
            $this->dragFileToUpload($drop_area, $tmp_file); // FIXME: SAFARI qui restituisce: "ElementNotVisibleException: InvalidStateError: DOM Exception 11 (WARNING: The server did not provide any stacktrace information)"
            // This error is also thrown when attempting to modify the value property of a <input type="file". This is a security check. For obvious security purposes, you cannot modify the value field of a file input field in JavaScript
            // Otherwise that would allow any script to upload random files from the user computer to their server without any action on the user part. Thus, when trying to update the property, the browser will throw an exception
            // (http://stackoverflow.com/questions/3488698/invalid-state-err-dom-exception-11-webkit)
            self::$climate->white("file upload done....");

            $this->waitForXpath('//*[@id="tab-html"]/div/div[2]/div/a[1]');
            $this->check_webpage($this->getSiteHome() . '/visualizza/fattura', self::VISUALIZZAZIONE_TITLE);
                        
            if (self::$browser != self::MARIONETTE){ // NOTE: can't read the console with MARIONETTE: https://github.com/mozilla/geckodriver/issues/144
                $console_error = $this->countErrorsOnConsole();
                self::$climate->white("Errors on console: " . $console_error . "(max " . self::$max_errors_on_console . ") on page " . $wd->getCurrentURL());
                $this->assertLessThan(self::$max_errors_on_console, $console_error);
            }
            
            self::$climate->lightGreen('Fine testImportazioneFattura()');
        }
    }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /**
     * Checking that the url and the title of the webpage are what i expected
     *
     * @param string $url the url of the webpage
     * @param string $title the title of the webpage
     */
    private function check_webpage($expected_url, $expected_title = null) {
        $wd = $this->getWd();
        $url = $wd->getCurrentURL();
        self::$climate->white("Current url: " . $url);
        $this->assertEquals($expected_url, $url);
        if ($expected_title) {
            $title = $wd->getTitle();
            self::$climate->white("Current page title: " . $title);
            $this->assertContains($expected_title, $title);
        }
    }


    /**
     * Return SiteHome (use http protocol)
     */
    private function getSiteHome() {
        return "http://www." . self::$app_host;
    }

    /**
     * Take a temporary directory
     *
     * @return string the temporary directory
     */
    private function getTmpDir() {
        $tmp_dir = sys_get_temp_dir();
        if ($this->isTravis()) {
            $tmp_dir = __DIR__;
        }
        if (!is_writable($tmp_dir)) {
            $this->fail("Temp dir not writable: " . $tmp_dir);
        }
        return $tmp_dir;
    }
}
